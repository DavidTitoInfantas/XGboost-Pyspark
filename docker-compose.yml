version: '3.7'

services:
  spark-master:
    image: bitnami/spark:latest
    command: bin/spark-class org.apache.spark.deploy.master.Master
    ports:
      - "8080:8080"  # Porta para a interface de usuário do Spark Master
      - "7077:7077"  # Porta para o serviço Spark Master
    networks:
      - spark-net

  spark-worker-1:
    image: bitnami/spark:latest
    command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    depends_on:
      - spark-master
    environment:
      SPARK_MODE: "worker"  # Corrigido para fornecer como string simples
      SPARK_WORKER_CORES: "2"
      SPARK_WORKER_MEMORY: "2g"
      SPARK_MASTER_URL: "spark://spark-master:7077"
    networks:
      - spark-net

  spark-worker-2:
    image: bitnami/spark:latest
    command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    depends_on:
      - spark-master
    environment:
      SPARK_MODE: "worker"  # Corrigido para fornecer como string simples
      SPARK_WORKER_CORES: "2"
      SPARK_WORKER_MEMORY: "2g"
      SPARK_MASTER_URL: "spark://spark-master:7077"
    networks:
      - spark-net

  pyspark-notebook:
   image: jupyter/pyspark-notebook:latest
   ports:
     - "8888:8888"  # Porta para acessar o notebook Jupyter
   networks:
     - bridge
     - spark-net
   volumes:
     - ./notebooks:/home/jovyan/work  # Mapeamento de volumes para salvar os notebooks
networks:
  spark-net:
  bridge:



  # Codigo para encontrar token do jupyter
    # Iniciar container em background
    # $ docker-compose up -d 

    #Iniciar container mostrando o bash (terminal)
    # $ docker-compose up
  #Na saida do bash sai o token #
